<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>krasov's blog</title><link href="https://ideosyncrasov.github.io/" rel="alternate"></link><link href="https://ideosyncrasov.github.io/feeds/all.atom.xml" rel="self"></link><id>https://ideosyncrasov.github.io/</id><updated>2017-11-19T17:00:00+01:00</updated><entry><title>A Belated Post-Mortem</title><link href="https://ideosyncrasov.github.io/a-belated-post-mortem.html" rel="alternate"></link><published>2017-11-19T15:26:00+01:00</published><updated>2017-11-19T17:00:00+01:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-11-19:/a-belated-post-mortem.html</id><summary type="html">&lt;p&gt;Whereupon it is reflected on what worked and what didn't, and what comes next.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Against All Odds&lt;/h1&gt;
&lt;p&gt;Welcome back world! I'm finally doing the post-mortem for the 'game'
I submitted to the Lisp Game Jam 2017 that happened in October. And what do you
know, my submission came in first place (as unlikely as that sounds)!
More precisely, the ratings were as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Game&lt;/th&gt;
&lt;th&gt;Overall score&lt;/th&gt;
&lt;th&gt;Creativity score&lt;/th&gt;
&lt;th&gt;Presentation score&lt;/th&gt;
&lt;th&gt;Entertainment score&lt;/th&gt;
&lt;th&gt;Theme integration score&lt;/th&gt;
&lt;th&gt;# Votes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;In the Realm of Dark Forces&lt;/td&gt;
&lt;td&gt;3.083&lt;/td&gt;
&lt;td&gt;3.333&lt;/td&gt;
&lt;td&gt;3.667&lt;/td&gt;
&lt;td&gt;2.667&lt;/td&gt;
&lt;td&gt;2.667&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOTALONE&lt;/td&gt;
&lt;td&gt;2.875&lt;/td&gt;
&lt;td&gt;3.000&lt;/td&gt;
&lt;td&gt;2.500&lt;/td&gt;
&lt;td&gt;2.000&lt;/td&gt;
&lt;td&gt;4.000&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dark Planets&lt;/td&gt;
&lt;td&gt;2.750&lt;/td&gt;
&lt;td&gt;3.500&lt;/td&gt;
&lt;td&gt;3.000&lt;/td&gt;
&lt;td&gt;1.500&lt;/td&gt;
&lt;td&gt;1.500&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B@TTY&lt;/td&gt;
&lt;td&gt;2.298&lt;/td&gt;
&lt;td&gt;2.121&lt;/td&gt;
&lt;td&gt;2.828&lt;/td&gt;
&lt;td&gt;1.414&lt;/td&gt;
&lt;td&gt;2.828&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, the ratings have to be taken with a big grain of salt since
there were so few of them. Also note that the above scores are not the &lt;em&gt;raw&lt;/em&gt;
scores but scores that take into account the number of ratings. The winner in
terms of raw scores would actually be the game that is last in the above
ranking.&lt;/p&gt;
&lt;p&gt;But if there is at least one thing I can deduce from this table, then it is
that my entry succeeded in terms of presentation.&lt;/p&gt;
&lt;h1&gt;What Went Right&lt;/h1&gt;
&lt;p&gt;So the decision to spend time on implementing a tile-based renderer did pay off
in the end, because it allowed me to make use of some well-made assets done by
other people. It's really worth stressing the fact that my game contained &lt;em&gt;no
gameplay whatsoever&lt;/em&gt; and still was relatively well received. A good
presentation can go a long way!&lt;/p&gt;
&lt;p&gt;Having something decent to look at was also something that motivated me
&lt;em&gt;during&lt;/em&gt; development. Also, writing this blog really helped me order my ideas,
even though it took away a little bit of development time. In particular,
I really recommend writing about what you want to do on a particular day
&lt;em&gt;before&lt;/em&gt; you do it, for the very same reason that it orders the ideas in your
head and makes you more focused.&lt;/p&gt;
&lt;h1&gt;What Went Wrong&lt;/h1&gt;
&lt;p&gt;It is very tempting to look at your own creations with rose-tinted glasses and
evaluate them with too much forgiveness because they are 'your own children'.
At the same time, it is also very tempting to be overly critical of yourself
&lt;em&gt;in hindsight&lt;/em&gt; (especially if you are doing that self-criticism in public,
because it allows you to think of yourself as a righteous person); in a sense,
the 'later I' that evaluates the work of the 'former I' is a kind
of &lt;em&gt;arm chair expert&lt;/em&gt;. And so, one must be very cautious with judgements after
the facts.&lt;/p&gt;
&lt;p&gt;One should also make a distinction between 'mistakes' and 'things you should
not have done', i.e. between mistakes that were &lt;em&gt;worth making&lt;/em&gt; and those that
&lt;em&gt;weren't&lt;/em&gt;. For example, here are some mistakes that I don't regret making:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I focused on developing the graphics instead of the gameplay. Developing the
  tile-based renderer turned out to be way more time-consuming than I thought,
  because it resulted in several new sub-tasks (understanding the .tmx file
  format, creating extra tiles for the tilesets).&lt;/li&gt;
&lt;li&gt;Spend the last few hours of the game jam with polishing the look and feel.
  For example, during that time I implemented a simulation of night/daytime
  colour changes.&lt;/li&gt;
&lt;li&gt;I went with a slightly unorthodoxic game idea that I was interested in,
  instead of sticking with something more traditional and realistic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The reason why I don't regret the first two mistakes follows from the above
discussion: even I had no gameplay to show for at all, at least it succeeded in
the area of visuals. The reason I don't regret the third mistake is that
I doubt I would have had the motivation to work much at all on the game had it
been something my heart was not in.&lt;/p&gt;
&lt;p&gt;How about mistakes I regret? Well, ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Staying up 'just a little bit more' to get things done is a stupid idea &lt;em&gt;in
  general&lt;/em&gt; because a) spending two more hours on game development when you are
  tired and exhausted is less efficient than spending those same two hours when
  you are fresh and awake, and b) disrupting your sleep schedule really lowers
  your creativity and productivity on the next day. However, this does &lt;em&gt;not&lt;/em&gt;
  apply to the very last day before the deadline: if I hadn't 'crunched',
  I would not have been able to submit anything at all.&lt;/li&gt;
&lt;li&gt;Sacrificing things you normally do for game development. Again, this comes
  with the same caveat as the mistake above, in the sense that it doesn't apply
  to the day before the deadline. Otherwise, I wouldn't recommend that you miss
  events or activities you would do normally in order to have more time for
  development. What good does a few more hours do if you spend those hours
  feeling miserable because you denied yourself an accustomed source of
  pleasure?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;The Real Challenge Lies Ahead&lt;/h1&gt;
&lt;p&gt;Okay, so the game jam is now well over, and technically it even was a success.
Now what? Well, now comes the hardest part, because now the task of completing
the game presents itself to me, and I have no energy-spending deadline ahead of
me that pushes me to work, no people to compete with and compare myself with.
Rather, what lies ahead of me the long, slow, and lonely crawl to completion.&lt;/p&gt;
&lt;p&gt;Wish me luck!&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 10</title><link href="https://ideosyncrasov.github.io/day-10.html" rel="alternate"></link><published>2017-10-22T14:20:00+02:00</published><updated>2017-10-22T03:23:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-22:/day-10.html</id><summary type="html">&lt;p&gt;I'm not gonna make it.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Last-Minute-Effort&lt;/h1&gt;
&lt;p&gt;There are officially 15 hours 38 minutes and 23 seconds left. Not a whole lot,
but let's try anyway.&lt;/p&gt;
&lt;p&gt;First thing to do, implement animations/state transitions. As I mentioned
yesterday, I find it generally hard to conceptualize such things (despite or
maybe because of a strong tendency to conceptual thinking). My momentary
solutions is to maintain a list &lt;code&gt;active-animations&lt;/code&gt; in my game state, which is
a list of subclasses of an abstract base class &lt;code&gt;animation&lt;/code&gt;.
This base class defines three generic methods:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(defgeneric animate (animation state))
(defgeneric draw (animation state))
(defgeneric post-animation (animation state))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here &lt;code&gt;state&lt;/code&gt; is a variable holding the game state. The first method is called
in &lt;code&gt;update-world&lt;/code&gt; and does some actions depending on the subclass, so there's
one subclass for every kind of animation. The &lt;code&gt;animate&lt;/code&gt; method return a boolean
that indicates whether the animation is finished or not. If it is finished it
is removed from &lt;code&gt;active-animations&lt;/code&gt; and the method &lt;code&gt;post-animation&lt;/code&gt; is called.
Note that the &lt;code&gt;animate&lt;/code&gt; method can itself push new animations to the front of
&lt;code&gt;active-animations&lt;/code&gt;, so that one animation can trigger another animation.
Finally, &lt;code&gt;draw&lt;/code&gt; is called on each rendering step.&lt;/p&gt;
&lt;p&gt;In this way I hope to be able to piece together the logic of the game, without
having to write one huge game logic function.&lt;/p&gt;
&lt;h1&gt;It Didn't End Well&lt;/h1&gt;
&lt;p&gt;I did manage to submit something that &lt;em&gt;looks&lt;/em&gt; like a game just five minutes
before the deadline. There is no game play, and it is not a game. Also, because
I was running out of time, I had to adopt a 'whatever-works mentality'. That
produced some truly horrible code. But I don't care. It's very later (or rather
very early). I failed. I don't care. Good night.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 9</title><link href="https://ideosyncrasov.github.io/day-9.html" rel="alternate"></link><published>2017-10-21T23:41:00+02:00</published><updated>2017-10-22T03:23:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-21:/day-9.html</id><summary type="html">&lt;p&gt;Getting more skeptical by the minute.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Organizing Complexity&lt;/h1&gt;
&lt;p&gt;It's the second last day before submission (or what's left of it). I started
working on the game about three hours ago. Most of this time was spent
reorganizing code. Having everything crammed into one huge main files with
dozens of global variables is never a good thing, time pressure or not.&lt;/p&gt;
&lt;p&gt;There is now much more separation between the individual parts of the game
(updating game state, drawing game state, etc.), which helps me figuring out
how to implement the game logic. I've always found organizing code (i.e.
figuring out "what goes where") difficult. What helps me reduce the cognitive
dissonance induced by this problem is to work iteratively: just put in anything
that works; you'll figure out soon enough if it sucks.&lt;/p&gt;
&lt;h1&gt;Other Problems&lt;/h1&gt;
&lt;p&gt;I've run into another problem: I don't know how to play sound in loops! The
engine I'm using doesn't expose this capability. Guess I'll have to worry about
other problems (of which there are plenty). But this will have to wait for
tomororrow, for it is very late already.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 8</title><link href="https://ideosyncrasov.github.io/day-8.html" rel="alternate"></link><published>2017-10-20T17:46:00+02:00</published><updated>2017-10-21T00:28:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-20:/day-8.html</id><summary type="html">&lt;p&gt;Trying anyway.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Putting Yourself Together&lt;/h1&gt;
&lt;p&gt;Alrighty. It's still quite early in the day, plenty time to finish that tile
renderer, don't you think? ;-)
All I need is some coffee and a nice soundtrack to get me in the mood:
&lt;em&gt;Halloween III: Season of the Witch&lt;/em&gt;. Hell yeah!&lt;/p&gt;
&lt;h1&gt;A Good Scare&lt;/h1&gt;
&lt;p&gt;It seems like that the package &lt;code&gt;cxml&lt;/code&gt; I'm relying on to parse the &lt;code&gt;.tmx&lt;/code&gt; files
is incomplete. :-( I guess that's the appropriate punishment for trying to
write a game in LISP. Of course it goes without saying, that &lt;code&gt;cxml&lt;/code&gt; barely has
any documentation besides the source code itself. This is really bad.&lt;/p&gt;
&lt;p&gt;Okay, it's not actually bad. The functionality I was looking for is actually
implemented (despite some comments within the code saying otherwise), and
I know how to use it now. That was a good scare!&lt;/p&gt;
&lt;h1&gt;The Moment of Truth&lt;/h1&gt;
&lt;p&gt;Alright, the tile renderer is basically done now. Let's see if it still works
... Of course it doesn't. Will humans ever be able to write correct computer
programs?&lt;/p&gt;
&lt;p&gt;About half an hour later, all (of the apparent) bugs seem to have been weeded
out. The "game" looks now just as before, which is a good sign. This deserves
a commit!&lt;/p&gt;
&lt;h1&gt;The Torture Never Stops&lt;/h1&gt;
&lt;p&gt;Of course there were more bugs. There are always more bugs. At least I learned
some more tidbits of Common Lisp knowledge (for example that make-tash-table
compares keys with &lt;code&gt;eql&lt;/code&gt; by default, even if these keys are strings). It also
taught me that seemingly simple things like parsing CSV can be complicated,
given the right circumstances, for example if the file you're reading was
encoded with the Windows convention of using CRLF as an indicator of a line
break, but the package you are using to parse the CSV file just assumes it is
encoded with unix conventions.&lt;/p&gt;
&lt;h1&gt;It's Alive!&lt;/h1&gt;
&lt;p&gt;Weeding out the remaining bugs took way longer than I thought, but eventually
I managed to complete the tile renderer. There's probably room for
optimizations (I'm not very happy with the performance), but at least I've got
something resembling a game, at least visually. The map I created is renderer
faithfully (except for the "collision" layer which I still need to treat
differently), and the character is rendered in the appropriate layer, so that
it gets obscured when it moves behind a wall etc.&lt;/p&gt;
&lt;p&gt;I initially hoped to be able to complete the tile renderer and the map. At
least I achieved one of the two, so I'm quite happy. But now I must go to bed
and not repeat the mistakes of previous nights!&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 7</title><link href="https://ideosyncrasov.github.io/day-7.html" rel="alternate"></link><published>2017-10-19T22:28:00+02:00</published><updated>2017-10-20T03:54:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-19:/day-7.html</id><summary type="html">&lt;p&gt;I'm far behind.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Trying Anyway&lt;/h1&gt;
&lt;p&gt;Dear reader,&lt;/p&gt;
&lt;p&gt;you may be wondering what's happened to Day 6. Well, I didn't get to do any
work on my game, because I had to work on something else I couldn't afford not
to work on. I also went to the movies with an old friend, so that's enough
excuses I think. With what little remains of this day (it's 10 pm right now),
I hope to at least be able to rewrite the renderer to be able to handle .tmx
files. Let's put on the &lt;em&gt;System Shock soundtrack&lt;/em&gt;, and let's go!&lt;/p&gt;
&lt;h1&gt;Old Mistakes Done Anew&lt;/h1&gt;
&lt;p&gt;I didn't manage to finish my tile renderer; I made barely any progress the
last two hours because I was very tired. Why didn't I just go to bed? Oh, why?&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 5</title><link href="https://ideosyncrasov.github.io/day-5.html" rel="alternate"></link><published>2017-10-18T03:54:00+02:00</published><updated>2017-10-18T03:54:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-18:/day-5.html</id><summary type="html">&lt;p&gt;I'm stuck in a vicious circle.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Why am I doing this to me?&lt;/h1&gt;
&lt;p&gt;I didn't get a whole lot done today; I really should not have gone to bed so
late yesterday, and today I repeated my mistake. I didn't implement a UI or an
animation/scripting system. I only got to work on the map (about halfway done).
Tomorrow I'll hopefully be able to complete the map and improve my renderer, so
that it can read .tmx files and render several layers.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 4</title><link href="https://ideosyncrasov.github.io/day-4.html" rel="alternate"></link><published>2017-10-17T03:24:00+02:00</published><updated>2017-10-17T03:36:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-17:/day-4.html</id><summary type="html">&lt;p&gt;I need to make a &lt;em&gt;game&lt;/em&gt;.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;A Myriad Little Details&lt;/h1&gt;
&lt;p&gt;Okay, this time I'll keep this very short, since it's already &lt;em&gt;very&lt;/em&gt; late and
I'm quite tired. I didn't get to work on my game until about 8 pm, and I (of
course) didn't manage to get as far as I intended, but at least I've now got
a player character that can walk around with animations.
Getting even such a simple thing to work took &lt;em&gt;way&lt;/em&gt; longer than it should have,
but the devil's in the detail, and of course there were some bugs that needed
to be weeded out. I'm not very happy that I didn't get to spend any time on
working on the gameplay, but at least I was able to do a fair bit of cleaning.
Tomorrow I plan to code some basic UI and a way to script things, and I hope
I'll finally able to work on gameplay too.&lt;/p&gt;
&lt;p&gt;Good night.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 3</title><link href="https://ideosyncrasov.github.io/day-3.html" rel="alternate"></link><published>2017-10-15T14:35:00+02:00</published><updated>2017-10-16T03:51:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-15:/day-3.html</id><summary type="html">&lt;p&gt;I need to produce code.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;From Fiction to Fact&lt;/h1&gt;
&lt;p&gt;Okay, day 3. Enough idle thinking, now I need to produce some code. My idea is
to get at least a proof of concept of a character walking around in a 2d top
down perspective room. Since I haven't aquainted myself with the engine I'm
using before this game jam, I'll do that now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Two hours later.&lt;/em&gt; At last, some code (even if it's only the trivial-gamekit
tutorial)! But I feel more confident now that I can pull this off. Just a quick
shower and a little bit of worldly chores, then I'll try to get that
proof-of-concept up and running.&lt;/p&gt;
&lt;h1&gt;... Or Something In Between&lt;/h1&gt;
&lt;p&gt;Okay, I got &lt;em&gt;something&lt;/em&gt; running at least. I didn't get as far as I wanted (no
animated player character), but at least I have code that can draw a tile-based
map (even if it's very hacky). But I wouldn't even have gotten that far would
&lt;a href="http://www.mapeditor.org/" title="Tiled Map Editor"&gt;Tile&lt;/a&gt; or &lt;a href="https://www.opengameart.org/" title="OpenGameArt.org"&gt;OpenGameArt.org&lt;/a&gt; not exist. Also, being able to edit and
re-evaluate code to have the change immediately effect a running process was
&lt;em&gt;super helpful&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Tomorrow I'll hope to be able to implement character animation, and implement
some gameplay mechanics.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 2</title><link href="https://ideosyncrasov.github.io/day-2.html" rel="alternate"></link><published>2017-10-14T16:24:00+02:00</published><updated>2017-10-14T19:30:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-14:/day-2.html</id><summary type="html">&lt;p&gt;A new day, a new hope.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;A New Day, a New Start&lt;/h1&gt;
&lt;p&gt;Alright, next day. Bad news: I wasted the night trying to fix a stupid bug in
my iOS app (turned out to be an AutoLayout issue), and after doing a bit of
necessary shopping it's already 4 pm. Good news: Borodust has already fixed the
issue that prevented me from using his &lt;code&gt;trivial-gamekit&lt;/code&gt; yesterday. Time for
some prototyping!&lt;/p&gt;
&lt;h1&gt;Pen and Paper Prototyping&lt;/h1&gt;
&lt;p&gt;I figured it would be more productive to develop the gameplay idea using pen
and paper; coding (and typing) just takes &lt;em&gt;so much&lt;/em&gt; longer than scribbling
something one a piece of paper.&lt;/p&gt;
&lt;p&gt;A few hours and two A4 papers densely covered in writing later, I have a rough
idea of how the gameplay mechanics should look. Basically, the internal state
of the game is represented by a graph together with a set of internal variables
of the player, representing his emotional and mental state. So, the graph
represents the externally visible state, whereas the "hidden variables" the
subjective one.&lt;/p&gt;
&lt;p&gt;Each vertex of said graph represents a situation/scene (e.g. &lt;code&gt;player lies on
bed&lt;/code&gt;, &lt;code&gt;player sits on bed&lt;/code&gt;), and where each edge presents an "action"
(visualized by an appropriate animation). Such an action can lead from one
situation to a different one (e.g. action &lt;code&gt;get up&lt;/code&gt; transitions
from &lt;code&gt;player lies in bed&lt;/code&gt; to &lt;code&gt;player sits on bed&lt;/code&gt;) or lead back to the same
situation (e.g. &lt;code&gt;keep dozing&lt;/code&gt;), only affecting the internal state.&lt;/p&gt;
&lt;p&gt;The internal variables are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Awareness/Consciousness&lt;/li&gt;
&lt;li&gt;Arousal/Calmness&lt;/li&gt;
&lt;li&gt;Mood&lt;/li&gt;
&lt;li&gt;Wants (hunger, thirst)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the exception of the last variable, which is discrete, all these variables
are continuous and one-dimensional (i.e. real numbers), and they effect the
gameplay in different ways.&lt;/p&gt;
&lt;p&gt;For example, &lt;em&gt;Awareness&lt;/em&gt; has two effects. First, a sufficient level of awareness
is necessary to even make decisions. Otherwise, these "decisions" (i.e. actions)
are solely determined by habits and wants, i.e. which edge transition is chosen
is determined randomly, with pre-set proabilities that are influenced by the
&lt;code&gt;wants&lt;/code&gt;. Higher levels of awareness dampen the influes of wants, and increase
the probability that the players choice coincides with the action his character
takes.
Second, awareness allows the player to recognize the emotional state (internal
variables) of his character, and open up more, less stereotypical choices.&lt;/p&gt;
&lt;p&gt;The effect of &lt;em&gt;Mood&lt;/em&gt; is that a positive mood makes it more likely to be able to
take an action that is perceived as unpleasant (e.g. cleaning up your room).&lt;/p&gt;
&lt;p&gt;The effect of the &lt;em&gt;Calmness&lt;/em&gt; variable is that it influences the influence (yes,
that's meta) of the mood variable. To wit, having a good mood in a state of
extreme excitation is ecstasy, whereas having a bad mood in the same state is
insanity.&lt;/p&gt;
&lt;h1&gt;The Sketch of a Sketch&lt;/h1&gt;
&lt;p&gt;As I said &lt;a href="https://ideosyncrasov.github.io/day-1"&gt;Yesterday&lt;/a&gt;, I envision this game to be the movie &lt;em&gt;Groundhog
Day&lt;/em&gt; turned into a roguelike (if this roguelike was a text adventure). More
concretely, the game should take place in the apartment of someone who is
continually kept in a vicious circle of unhealthy decisions, and should focus
on his daily routine.
Of course the goal of this game (if it will ever exist) is to gain control of
one's life, that is of the actions of the player character, by making
appropriate choices that lead to more internal freedom and less addiction.&lt;/p&gt;
&lt;p&gt;That's the rough idea at least. We'll see whether it will stay one.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry><entry><title>Day 1</title><link href="https://ideosyncrasov.github.io/day-1.html" rel="alternate"></link><published>2017-10-13T10:20:00+02:00</published><updated>2017-10-13T19:30:00+02:00</updated><author><name>krasov</name></author><id>tag:ideosyncrasov.github.io,2017-10-13:/day-1.html</id><summary type="html">&lt;p&gt;Aller Anfang ist schwer.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;A Simple Idea&lt;/h1&gt;
&lt;p&gt;Okay, so I've decided to join the Lisp Game Jam Fall 2017, and now I'm sitting here with
my morning coffee trying to come up with an idea for a game. The theme for this
jam is &lt;em&gt;darkness&lt;/em&gt;, which actually not that dull and generic of a theme as it
sounds. Indeed the word 'dark' has several distinct but closely related
meaning (taken from Merriam-Webster):&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;devoid or partially devoid of light&lt;/li&gt;
&lt;li&gt;wholly or partially black&lt;/li&gt;
&lt;li&gt;a) arising from or showing evil traits or desires
  b) dismal, gloomy
  c) lacking knowledge or culture&lt;/li&gt;
&lt;li&gt;a) not clear to the understanding
  b) not known or explored because of remoteness&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;The esoteric wisdom preserved in this semantic cluster is that evil can only
exist in darkness, i.e. in a state of ignorance, and that light (consciouness)
dissolves darkness. Further, 4b) points to the fact that to gain awareness of
ourselves means &lt;em&gt;exploring&lt;/em&gt; ourselves, for our behaviour is ruled for the most
part not by the processes of 'conscious' thoughts (thoughts are often automatic
and not conscious) but by other, more obscure forces.&lt;/p&gt;
&lt;p&gt;This actually connects with an idea for a game I had a while ago, which
revolved around making the player's consciousness the main focus of the game.
In the above terms, the idea was to let the player bring light into a dark
unenlightened world, whose inhabitants are suffering under their actions they
inflict upon themselves in their ignorance. So, it would be some kind of 'god
game' where the goal is not to rule but to enlighten and heal people.
Such a game might even just focus on one person (e.g. someone suffering
from depression/addiction), and in a sense, such a game already exists with
&lt;em&gt;Depression Quest&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, this idea seems too vague and certainly too ambitious for a game
dev n00b taking part in a ten day game jam in an obscure ancient programming
language. Or is it? Anyway, I guess it's more productive if I try coming up
with the &lt;em&gt;gameplay first&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Well whadda ya know, one shower later and I've come up with some barebones
gameplay and a tentative title for the game, which embodies the principle upon
which said gameplay rests: &lt;em&gt;Hidden Variables&lt;/em&gt;. The idea is that you're
controlling but not really controlling the actions of the protagonist, through
multiple choice selection screens, each choice triggering a pre-defined 'cut
scene' sequence. More precisely, the player selects a choice he would like to
make, but which choice the protagonist realizes depends upon his inner mental
and emotional states (the 'hidden variables' aluded to in the title).
The player starts out with little control over his character, and must make the
right decisions that lead his character on a healthier path and out of the
slavery of unconscious emotions, out of the 'realms of dark forces', so that
he gains more and more free will, disproving the saying that 'man can do what
he wants but not want what he wants'.&lt;/p&gt;
&lt;p&gt;In a nutshell, &lt;em&gt;Hidden Variables&lt;/em&gt; should be the move &lt;em&gt;Groundhog Day&lt;/em&gt; turned
into a roguelike. What I need to do next is come up with a functional system of
hidden variables, i.e. emotional/mental dimensions like
&lt;em&gt;irritation&lt;/em&gt;&amp;lt;-&amp;gt;&lt;em&gt;concentration&lt;/em&gt;, &lt;em&gt;discontent&lt;/em&gt;&amp;lt;-&amp;gt;&lt;em&gt;pleasure&lt;/em&gt;, etc. that at least
somewhat faithfully reflects human behaviour, make some kind of 'hello world'
demonstrating this idea. Even though my idea is that this should be a top-down
2d game, if worst comes to worst I could simply turn this into a text
adventure.&lt;/p&gt;
&lt;p&gt;Enough talking, let's code!&lt;/p&gt;
&lt;h1&gt;First Problems&lt;/h1&gt;
&lt;p&gt;Okay, a few hours later and I still haven't made any headway at all.
I planned on using &lt;a href="https://borodust.org/projects/trivial-gamekit/"&gt;borodust's engine&lt;/a&gt;, but I couldn't get it to work
on either windows (SBCL and CCL) or Debian (SBCL). Luckily, borodust offered
quick and generous help on #lispgames, and even updated his quicklisp dist the
very same evening, so I'm hopeful this will be sorted out soon.
Anyway, I should probably concentrate on getting done a prototype demonstrating
the core gameplay. This will have to wait till tomorrow however.&lt;/p&gt;</content><category term="lisp"></category><category term="game jam"></category></entry></feed>